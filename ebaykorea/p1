문제 설명
은행 창구 대기 시간이 언제 길어지는지 시뮬레이션 프로그램을 통해 알아보려 합니다. 시뮬레이션은 다음과 같은 방법으로 진행합니다.

창구 수를 설정합니다.
고객별로 대기 번호를 받은 시각과 상담에 걸리는 시간을 설정합니다.
생성된 데이터를 이용해 상담 처리 과정을 시뮬레이션합니다.
대기 번호를 받은 고객은 상담 창구가 비어있다면 대기 시간 없이 즉시 상담을 받습니다.
빈 창구가 없다면 빈 창구가 생길 때 까지 기다립니다.
상담 시간이 끝나면 고객은 돌아가고, 빈 창구가 하나 생깁니다.
단, 편의를 위해 시각은 0초부터 시작하며 모든 시간은 초 단위를 사용합니다. 또, 상담이 끝나 창구가 비면 즉시 다음 상담 업무를 처리합니다.

시뮬레이션 프로그램을 돌리던 중, 이번에는 전체 고객의 대기시간 합이 얼마인지 구해보려 합니다.

예를 들어 상담 창구가 2개이고, 시뮬레이션 데이터가 다음과 같은 경우

대기 번호를 받은 시각(초)	상담 시간(초)
0	3
2	5
4	2
5	3
시뮬레이션 결과는 다음과 같습니다.

시각(초)	설명
0	첫 번째 고객이 대기 번호를 받고 빈 창구에 배정됩니다.
1	-
2	두 번째 고객이 대기 번호를 받고 빈 창구에 배정됩니다.
3	첫 번째 고객의 상담이 끝나고 창구가 하나 빕니다.
4	세 번째 고객이 대기 번호를 받고 빈 창구에 배정됩니다.
5	네 번째 고객이 대기 번호를 받고 빈 창구가 생길 때 까지 기다립니다.
6	세 번째 고객의 상담이 끝나고 창구가 하나 빕니다. 네 번째 고객이 빈 창구에 배정됩니다.
7	두 번째 고객의 상담이 끝나고 창구가 하나 빕니다.
8	-
9	네 번째 고객의 상담이 끝나고 창구가 하나 빕니다.
따라서 네 번째 고객만 1초를 기다렸으며, 전체 대기시간 합은 1초입니다.

상담 창구 개수 N, 고객이 대기 번호를 받은 시각과 상담 시간이 담긴 2차원 배열 simulation_data가 매개변수로 주어질 때, 고객들이 대기 번호를 받은 후 창구에 배정되기까지 기다린 시간의 총합을 return 하도록 solution 함수를 완성해주세요.

제한사항
N은 1 이상 20 이하인 자연수입니다.
simulation_data는 가로(열) 길이가 2, 세로(행) 길이가 1 이상 500 이하인 2차원 배열입니다.
세로(행) 길이는 대기 번호를 받은 고객수입니다.
simulation_data의 원소는 [대기 번호를 받은 시각, 상담 시간] 형태입니다.
대기 번호를 받은 시각은 0 이상 10,000 이하인 정수입니다.
상담 시간은 1 이상 600 이하인 정수입니다.
데이터는 대기 번호를 받은 시각 순서로 정렬되어 있습니다.
대기 번호를 받은 시각이 중복되는 경우는 없습니다.
입출력 예
N	simulation_data	result
2	[[0, 3], [2, 5], [4, 2], [5, 3]]	1
1	[[2, 3], [5, 4], [6, 3], [7, 4]]	8
입출력 예 설명
입출력 예 #1

문제의 예시와 같습니다.

입출력 예 #2

주어진 데이터대로 시뮬레이션을 진행하면 첫 번째 고객과 두 번째 고객은 대기 없이 즉시 상담 창구에 배정됩니다. 세 번째 고객과 네 번째 고객은 상담 창구가 빌 때까지 각각 3초, 5초를 기다려야 합니다. 따라서 전체 대기시간 합은 8초입니다.